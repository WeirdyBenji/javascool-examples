/*
Projet Initié par : Théo F. et Victor L.
Dans le cadre des projets de spécialité ISN 2016-2017
Auteur : Benjamin Feller
Soft : javascool-proglets -> codagePixels
Requière : menu.pbm, figure1.pbm, figure2.pbm, figure3.pbm, figure4.pbm et figure5.pbm
Version finale, non optimisée, commentée pour une compréhension de niveau apprentissage du language Java
*/

int tab[][];
int newTab[][];
int posX = 0;
int hauteur = 0;
int largeur = 0;

void main(){
	clear();
	load("menu.pbm", false);
	getPos();

	largeur = getWidth();
	hauteur = getHeight();
	//Création du tableau qui va contenir l'image à l'intant t
	tab = new int[largeur][hauteur];
	//L'utilisateur à 3secondes pour choisir sa figure si non le jeu de la vie se fait avec le menu
	sleep(3000);
	//Enregistrement de chaque pixel de l'image dans le tableau
	imgToTab();
	//On arrête la runnable pour ne pas interrompre le jeu
	setRunnable(null);
	//Création du tableau qui va contenir l'image à l'intant t+1 pour ne pas effacer celui de l'istant t
	newTab = tab;

	int tour = 0;
	boolean stop = false;
	while(stop == false){
		//La boucle s'exécutera toutes les 2ms, 10s = 10.000ms soit 5.000 tours de boucle en 10s
		//Sans précision à cause du temps d'exécution du programme
		sleep(1);
		tour++;
		
		check();
		display();

		if(tour >= 5000){
			stop = true;
		}
	}
}

void getPos() {
	setRunnable(new Runnable() {
		public void run() {
			int n = 1;
			posX = getX();
			if (posX > 0 && posX <= 8){
				n = 1;
			}else if (posX > 8 && posX <= 16){
				n = 2;
			}else if (posX > 16 && posX <= 24){
				n = 3;
			}else if (posX > 24 && posX <= 32){
				n = 4;
			}else if (posX > 32 && posX <= 41){
				n = 5;
			}else{
				print("Erreur de chargement de l'image.");
			}
			//Chargement de l'image avec redéfinition de l'origine
			load("figure" + n + ".pbm", false);
			imgToTab();
			setRunnable(null);
	}});
}

void imgToTab() {
	for(int x = 0; x < largeur; x++){
		for(int y = 0; y < hauteur; y++){
			if (getPixel(x, y) == 0){
				tab[x][y] = 1;	
			}else{
				tab[x][y] = 0;	
			}
		}
	}
}

void check(){
	for(int y = 0; y < hauteur; y++){
		for(int x = 0; x < largeur; x++){
			int voisins = 0;
			//En haut à gauche
			if (y == 0 && x == 0){
				voisins = tab[x+1][y] + tab[x][y+1] + tab[x+1][y+1];
			//En haut à droite
			}else if(y == 0 && x == largeur-1){
				voisins = tab[x-1][y] + tab[x-1][y+1] + tab[x][y+1];
			//En bas à droite
			}else if(y == hauteur-1 && x == largeur-1){
				voisins = tab[x-1][y-1] + tab[x][y-1] + tab[x-1][y];
			//En bas à gauche
			}else if(y == hauteur-1 && x == 0){
				voisins = tab[x][y-1] + tab[x+1][y-1] + tab[x+1][y];
			//En haut
			}else if(y == 0 && x > 0 && x < largeur-1){
				voisins =	tab[x-1][y] + tab[x+1][y] + tab[x-1][y+1] + tab[x][y+1] + tab[x+1][y+1];
			//A gauche
			}else if(y > 0 & y < hauteur-1 & x == 0){
				voisins =	tab[x][y-1] + tab[x+1][y-1] + tab[x+1][y] + tab[x][y+1] + tab[x+1][y+1];
			//En bas
			}else if(y == hauteur-1 & x > 0 & x < largeur-1){
				voisins =	tab[x-1][y-1] + tab[x][y-1] + tab[x+1][y-1] + tab[x-1][y] + tab[x+1][y];
			//A droite
			}else if(y > 0 & y < hauteur-1 & x == largeur-1){
				voisins =	tab[x-1][y-1] + tab[x][y-1] + tab[x-1][y] + tab[x-1][y+1] + tab[x][y+1];
			//Au centre
			}else{
				voisins =	tab[x-1][y-1] + tab[x][y-1] + tab[x+1][y-1] + 
				tab[x-1][y] + tab[x+1][y] + 
				tab[x-1][y+1] + tab[x][y+1] + tab[x+1][y+1];
			}
   
			if(voisins == 3){
				//Si elle a exactement trois voisines vivantes, elle est vivante à l'étape suivante
				newTab[x][y] = 1;
			}else if(voisins < 2 || voisins > 3){
				//Si elle a moins de deux ou plus de trois voisines vivantes, elle meurt
				newTab[x][y] = 0;
			}
		}
	}
	tab = newTab;
}

void display(){
	for(int x = 0; x < largeur; x++){
		for(int y = 0; y < hauteur; y++){
			if (tab[x][y] == 1){
				setPixel(x, y, "black");
			}else
				setPixel(x, y, "white");
		}
	}
}
